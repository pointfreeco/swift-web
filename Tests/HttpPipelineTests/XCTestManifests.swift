#if !canImport(ObjectiveC)
import XCTest

extension EncryptionTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__EncryptionTests = [
        ("testDecrypt", testDecrypt),
        ("testDigest", testDigest),
        ("testEncrypt", testEncrypt),
    ]
}

extension HttpPipelineTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__HttpPipelineTests = [
        ("testCookieOptions", testCookieOptions),
        ("testCookies", testCookies),
        ("testHtmlResponse", testHtmlResponse),
        ("testPipeline", testPipeline),
        ("testRedirect", testRedirect),
        ("testRedirect_AdditionalHeaders", testRedirect_AdditionalHeaders),
        ("testWriteHeaders", testWriteHeaders),
    ]
}

extension SharedMiddlewareTransformersTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SharedMiddlewareTransformersTests = [
        ("testBasicAuth_Authorized", testBasicAuth_Authorized),
        ("testBasicAuth_Unauthorized", testBasicAuth_Unauthorized),
        ("testBasicAuth_Unauthorized_CustomFailure", testBasicAuth_Unauthorized_CustomFailure),
        ("testBasicAuth_Unauthorized_ProtectedPredicate", testBasicAuth_Unauthorized_ProtectedPredicate),
        ("testBasicAuth_Unauthorized_Realm", testBasicAuth_Unauthorized_Realm),
        ("testBasicAuthValidationIsCaseInsensitive", testBasicAuthValidationIsCaseInsensitive),
        ("testRedirectUnrelatedHosts", testRedirectUnrelatedHosts),
        ("testRequestLogger", testRequestLogger),
        ("testRequireHerokuHttps", testRequireHerokuHttps),
        ("testRequireHttps", testRequireHttps),
    ]
}

extension SignedCookieTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SignedCookieTests = [
        ("testEncryptedCookie", testEncryptedCookie),
        ("testEncryptedCookie_EncodableValue", testEncryptedCookie_EncodableValue),
        ("testSignedCookie", testSignedCookie),
        ("testSignedCookie_EncodableValue", testSignedCookie_EncodableValue),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(EncryptionTests.__allTests__EncryptionTests),
        testCase(HttpPipelineTests.__allTests__HttpPipelineTests),
        testCase(SharedMiddlewareTransformersTests.__allTests__SharedMiddlewareTransformersTests),
        testCase(SignedCookieTests.__allTests__SignedCookieTests),
    ]
}
#endif
